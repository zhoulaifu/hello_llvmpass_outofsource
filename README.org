* A minimal working example for building an LLVM pass

This repo attempts to provide a starting point for writing and
building an LLVM pass. To make things as simple as possible, the code
is to be built with bare-bone command lines, and the piece of code for
the LLVM pass is to be put out of the LLVM source tree.

Related:
- A helloworld LLVM pass, to be built in-source
http://llvm.org/docs/WritingAnLLVMPass.html#quick-start-writing-hello-world

-  A helloworld LLVM pass, to be built out-of-source, with CMake:
https://github.com/hperl/llvm-transformation-pass


** Assume we have an LLVM bitcode built with Clang

*** work
- clang `llvm-config --cppflags` -c Hello.cpp -fPIC -fno-rtti -o Hello.o
- clang Hello.o -shared -o Hello.so

*** not work (only diff is bad dash)
clang `llvm-config â€“-cppflags` -c Hello.cpp -fPIC -fno-rtti -o Hello.o





Change "-share" to "-dynamiclib" on Mac.
 
** How to run the pass

*** for relatively new llvm, use  -enable-new-pm=0, or else the pass will not be found

- opt -enable-new-pm=0 -load ./Hello.so -hello < foo.bc > /dev/null
